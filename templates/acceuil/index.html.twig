{% extends 'layout_public/layout_without_header.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('custom/style.css') }}">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.2/dist/leaflet.css"
          integrity="sha256-sA+zWATbFveLLNqWO2gtiw3HL/lh1giY/Inf1BJ0z14="
          crossorigin=""/>
{% endblock %}
{% block title %}Etat du trafic{% endblock %}
{% block page_content %} 

{% for message in app.flashes('success') %}
<div class="alert alert-success">
    {{ message }}
</div>
{% endfor %}

<div id="map" style="height: 642px"></div>

{% endblock %}
{% block end_javascripts %}
    {{ parent() }}

    <script src="https://unpkg.com/leaflet@1.9.2/dist/leaflet.js"
            integrity="sha256-o9N1jGDZrf5tS+Ft4gbIK7mYMipq9lqpVJ91xHSyKhg="
            crossorigin="">

    </script>

    <script type="text/javascript">
    var map;
    let dataSent = "";
    var donnee = [];
    var tabsPoints = L.featureGroup;
    var tabs = L.LayerGroup;


    function recupPosition(x,y){
        latitude = x;
        longitude = y;
    }

    navigator.geolocation.getCurrentPosition((position) => {
    recupPosition(position.coords.latitude, position.coords.longitude);
        lat = position.coords.latitude;
        lon = position.coords.longitude;
        map = L.map('map').setView([lat, lon], 14);
    });


/**
 * Cette fonction effectue un appel Ajax vers une url et retourne une promesse
 * @param {string} url 
 */


         var watchID = navigator.geolocation.watchPosition(
            // Succès
            function (position) {
                var lat = position.coords.latitude;
                var lng = position.coords.longitude;
                var datePosition = position.timestamp;
                var vitesse = position.coords.speed;

                var xhr = new XMLHttpRequest();
                xhr.open("POST", "testajax");
                xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                xhr.send('latitude=' + lat + '&longitude=' + lng + '&datePosition=' + datePosition);

                //alert(lat+", "+lng+", "+date+", "+vitesse);
        
                
            },
            // Erreur
            function (error) {
                alert('Erreur : ' + error.message);
            },
            // Configuration des options
            {
                maximumAge: 0
                //timeout: 2000
            }
        );


	function toRadian(degree) 
    {
		return degree*Math.PI/180;
	}

	function getDistance(Origin, destination) 
    {
    // return distance in meters
    var lon1 = toRadian(Origin[1]),
        lat1 = toRadian(Origin[0]),
        lon2 = toRadian(destination[1]),
        lat2 = toRadian(destination[0]);

    var deltaLat = lat2 - lat1;
    var deltaLon = lon2 - lon1;

    var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);
    var c = 2 * Math.asin(Math.sqrt(a));
    var EARTH_RADIUS = 6371;
    return c * EARTH_RADIUS * 1000;
	}


    $(document).ready(function () 
    {
            const eventSource = new EventSource("{{ mercure('ping')|escape('js') }}");
            eventSource.onmessage = event => {
                                                //tabsPoints.clearLayers;
                                                //tabs.clearLayers();
                                                // Will be called every time an update is published by the server
                                                dataSent = JSON.parse(event.data);
                                                donnee = dataSent.position;
                                                console.log(donnee);
                                                //Affichage du tracé des points envoyés par le serveur
                                                for (var i = 0; i<donnee.length; i++)
                                                {
                                                    traceTrafic(donnee[i][1], donnee[i][0]);
                                                }
                                            }
            /************************Récupération de la position envoyée AcceuilController***************************/
            //var map = L.map('map').setView([{{ position.latitude }}, {{ position.longitude }}], {{ position.zoom }});

            /*******Récupération de la position courante de l'utilisateur obtenue à partir de son navigateur*********/
            //var map = L.map('map').setView([latitude, longitude], 25);

            
            //L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    //maxZoom: 50,
                    //attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
            //}).addTo(map);

            //L.marker([{{ position.latitude }}, {{ position.longitude }}]).addTo(map).bindPopup('{{ position.lieu }}').openPopup();

        /*Fonction pour la représentation du marqueur du centre du cercle à tracer*/
		function point(lat, long, lieu) {
			L.marker([lat,long]).addTo(map).bindPopup(lat+", "+long+"<br> Lieu : "+lieu).openPopup();
		}

/************************************FONCTION UTILISEE POUR LE TRACE DU TRAFIC****************************************/

        /*Fonction pour le tracé du trafic*/
        function traceTrafic(tab, vitesse) { 
            /** #fa0707 = rouge
                #1e07fa = bleu
                #f8ed10 = jaune
                #10f821 = vert
            */
                if(vitesse < 17){
                    var trace = L.polyline(tab, {color: '#fa0707', weight: 8}).addTo(map);
                }else if(vitesse < 22){
                    var trace = L.polyline(tab, {color: '#1e07fa', weight: 8}).addTo(map);
                }else if(vitesse < 25){
                    var trace = L.polyline(tab, {color: '#f8ed10', weight: 8}).addTo(map);
                }else{
                    var trace = L.polyline(tab, {color: '#10f821', weight: 8}).addTo(map);
                }
            map.fitBounds(trace.getBounds());
            //tabs.addLayer(trace);
            //trace.addTo(tabsPoints);
            //map.removeLayer(trace);
		}

/************************************FONCTION POUR LE TRACE DU TRAFIC****************************************/
        function traficRayon1(tab) { 
            for(var j = 0; j < tab.length-1; j++) 
            {
                var p1 = tab[j];
                var p2 = tab[j+1];
                var tabp1p2 = [p1, p2];
                var distance = getDistance(p1, p2);
                var vitesse = distance/10;
                
                if(vitesse < 3){
                    var polyline = L.polyline(tabp3p4, {color: '#fa0707', weight: 8}).addTo(map);
                }else if(vitesse < 5){
                    var polyline = L.polyline(tabp3p4, {color: '#f8ed10', weight: 8}).addTo(map);
                }else if(vitesse < 25){
                    var polyline = L.polyline(tabp3p4, {color: '#1e07fa', weight: 8}).addTo(map);
                }else{
                    var polyline = L.polyline(tabp1p2, {color: '#10f821', weight: 8}).addTo(map);
                }
            }
            map.fitBounds(polyline.getBounds());
		}


/************************************FONCTION POUR LE TRACE DU TRAFIC DANS UN RAYON****************************************/
        function traficRayon2(rayon, centre, tab) { 
		var circle = L.circle(centre, {
					color: '#085f09',
					fillColor: '#9cfc1e',
					fillOpacity: 0.5,
					radius: rayon
				}).addTo(map);

		for(var j = 0; j < tab.length; j++) {
			var p3 = tab[j];tab2
			var p4 = tab[j+1];
			var tabp3p4 = [p3, p4];
			var distance = getDistance(p3, p4);
			var vitesse = distance/10;
			
			if(vitesse < 3){
				var polyline = L.polyline(tabp3p4, {color: '#fa0707', weight: 8}).addTo(map);
			}else if(vitesse < 5){
				var polyline = L.polyline(tabp3p4, {color: '#f8ed10', weight: 8}).addTo(map);
			}else if(vitesse < 25){
				var polyline = L.polyline(tabp3p4, {color: '#1e07fa', weight: 8}).addTo(map);
			}else{
				var polyline = L.polyline(tabp3p4, {color: '#10f821', weight: 8}).addTo(map);
			}
		}
	    map.fitBounds(polyline.getBounds());
		}

/************************************CLICK POUR APPELER LA FONCTION D'AFFICHAGE DU TRACE DANS UN RAYON****************************************/
		function onMapClick(e) {
            //var rayon = parseInt(prompt("Donnez le rayon en mètres : "));
			//var centre = e.latlng;
			//var latitude = e.latlng.lat;
			//var longitude = e.latlng.lng;
			//var lieu = e.title;
			//point(latitude, longitude, lieu);
            //traficRayon2(rayon, centre, latlngs);
			//map.setView([latitude, longitude], {{ 25 }});
		}

		//alert('Nous allons vous afficher l\'état du trafic dans un rayon autour d\'un point donné');
		//alert('Veuillez cliquer pour choisir un point');
		//map.on('click', onMapClick);
        //console.log(donnee[0][1]);
        //traficRayon(tab1);

/************************************AJOUT DE LA VUE SATELLITAIRE ET AUTRES VUES******************************************************/
		var baselayers = {
                            OSM: L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png'),
                            OSM_HOT : L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png'),
                            ESRI: L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}'),
                            OpenTopoMap : L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png'),
                            GoogleStreets : L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}',{
                                            maxZoom: 20,subdomains:['mt0','mt1','mt2','mt3']}),
                            GoogleSat : L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',{
                                         maxZoom: 20,subdomains:['mt0','mt1','mt2','mt3']}),

                        };

		baselayers.OSM.addTo(map);

        //Insertion de WMS comme couches
		var Cadastre = L.tileLayer.wms('http://geobretagne.fr/geoserver/cadastre/wms', {layers: 'CP.CadastralParcel',format: 'image/png',transparent: true});
		var Parcelbati = L.tileLayer.wms('http://mapsref.brgm.fr/wxs/refcom-brgm/refign',{layers: 'PARVEC_BATIMENT',format: 'image/png',transparent:true});
           
        //Centraliser les marqueurs
        var marqueurs = {"": Cadastre, "": Parcelbati};
        //Contrôler les marqueurs
        //L.control.layers(baselayers, marqueurs, {collapsed:false}).addTo(map);
        //Gestion des marqueurs centralisés
        L.control.layers(baselayers, marqueurs, {collapsed : true, position : 'topright', }).addTo(map);
        
/****************************************************AJOUT DE LA LEGENDE**********************************************************/
        var legend = L.control({position: 'bottomright'});
        legend.onAdd = function (map) {
            var div = L.DomUtil.create('div', 'legend');
            div.innerHTML += '<h6>LEGENDE</h6><br>';
            div.innerHTML += '<i style="background:#1e07fa"></i><span>Trafic normal - Vitesse moyenne</span><br>';//bleu
            div.innerHTML += '<i style="background:#10f821"></i><span>Trafic fluide - Voie dégagée</span><br>';//vert
            div.innerHTML += '<i style="background:#f8ed10"></i><span>Trafic serré- Voie occupée</span><br>';//jaune
            div.innerHTML += '<i style="background:#fa0707"></i><span>Trafic saturé - Embouteillage</span><br>';//rouge

            return div;
        };
        legend.addTo(map);	

/****************************************************AJOUT DE BLOC DESCRIPTIF**********************************************************/
/**        var info = L.control({position: 'topright'});
        info.onAdd = function (map) {
            var div = L.DomUtil.create('div', 'info');
            div.innerHTML += '<h3 >LEMOLEO</h3><br><br>';
            div.innerHTML += '<h4 >Plateforme d&apos;information sur</h4>';
            div.innerHTML += '<h4 >l&apos;&eacute;tat du trafic routier &agrave; Lom&eacute;</h4>';

            return div;
        };
        info.addTo(map);	
*/
/********************************************AJOUT DE L'ECHELLE CARTOGRAPHIQUE'******************************************************/     
		// Ajout de l'echelle cartographique
		L.control.scale().addTo(map);

/************************************INSERTION DE DONNES STATIQUES DE TRAFIC*********************************************/
        //Boulevard Eyadema en partant du bar 3K jusqu'à l'entrée GTA
        var trace1 =[[6.165293, 1.222719],
                    [6.166157, 1.222343],
                    [6.168682, 1.221211],
                    [6.170265, 1.220499],
                    [6.171636, 1.219826],
                    [6.172952, 1.219153],
                    [6.174000, 1.218609],
                    [6.175081, 1.218026],
                    [6.176424, 1.217331],
                    [6.177467, 1.216748],
                    [6.178999, 1.215968],
                    [6.180103, 1.215397],
                    [6.182188, 1.214399],
                    [6.184166, 1.213440],
                    [6.186881, 1.212145],
                    [6.189679, 1.210928],
                    [6.191931, 1.209852]
                    ];
        //Rond point GTA
        var trace2 =[[6.191601, 1.210041],
                    [6.191951, 1.209838],
                    [6.192389, 1.209636],
                    [6.192836, 1.209574],
                    [6.193178, 1.209565],
                    [6.193519, 1.209574],
                    [6.193835, 1.209530],
                    [6.194133, 1.209521],
                    [6.194317, 1.209371]
                    ];
        //Supermarché Concorde vers Avénou
        var trace3 =[[6.166684, 1.201875],
                    [6.167580, 1.201403],
                    [6.168519, 1.200717],
                    [6.169458, 1.199429],
                    [6.169799, 1.198185],
                    [6.170226, 1.194580],
                    [6.170695, 1.192134],
                    [6.172828, 1.187499],
                    [6.174364, 1.183980]
                    ];
        //Du rond-point Colombe vers stade Kégué
        var trace4 =[[6.149615, 1.230084],
                    [6.150740, 1.230084],
                    [6.151613, 1.229807],
                    [6.152657, 1.229281],
                    [6.153610, 1.228721],
                    [6.155223, 1.227832],
                    [6.156251, 1.227335],
                    [6.157393, 1.226671],
                    [6.157870, 1.226342],
                    [6.160264, 1.225095],
                    [6.161670, 1.224414],
                    [6.162922, 1.223721],
                    [6.165046, 1.222918],
                    [6.165373, 1.223727],
                    [6.165803, 1.225020],
                    [6.166268, 1.226925],
                    [6.166992, 1.229604],
                    [6.167267, 1.230147],
                    [6.167537, 1.230771],
                    [6.167732, 1.231423],
                    [6.167968, 1.232214],
                    [6.168392, 1.232861],
                    [6.168725, 1.234206],
                    [6.168829, 1.234709],
                    [6.170252, 1.234651],
                    [6.170838, 1.234628],
                    [6.171177, 1.234616],
                    [6.172658, 1.234564],
                    [6.175298, 1.234414],
                    [6.178214, 1.234264],
                    [6.179299, 1.234189],
                    [6.182606, 1.235124],
                    [6.185413, 1.236129],
                    [6.188926, 1.236833],
                    [6.191750, 1.237688],
                    [6.194878, 1.238693],
                    [6.198282, 1.239859],
                    [6.202656, 1.241418]
                    ];
        //Boulevard du Haho
        var trace5 =[[6.201741, 1.248580],
                    [6.195354, 1.245965],
                    [6.189093, 1.243364],
                    [6.182062, 1.240426],
                    [6.181154, 1.240173],
                    [6.179630, 1.240285],
                    [6.172628, 1.240960]
                    ];
        //Avénou vers Adidogomé
        var trace6 =[[6.176893, 1.178493],
                    [6.180189, 1.172747],
                    [6.187680, 1.163643],
                    [6.196534, 1.153566],
                    [6.204794, 1.143798],
                    [6.213648, 1.133412]
                    ];
        //Supermarché Concorde vers GTA
        var trace7 =[[6.166620, 1.202238],
                    [6.168800, 1.202864],
                    [6.170274, 1.203222],
                    [6.172294, 1.203722],
                    [6.174083, 1.204157],
                    [6.175781, 1.204586],
                    [6.177633, 1.205043],
                    [6.179073, 1.205437],
                    [6.180932, 1.205915],
                    [6.182826, 1.206343],
                    [6.184692, 1.206885],
                    [6.187137, 1.207503],
                    [6.189087, 1.207932],
                    [6.191142, 1.208459]
                    ];

/************************************AFFICHAGE DU TRACE****************************************/
                    traceTrafic(trace1, 25.0);
                    traceTrafic(trace2, 5.0);
                    traceTrafic(trace3, 30.0);
                    traceTrafic(trace4, 20.0);
                    traceTrafic(trace5, 2.0);
                    traceTrafic(trace6, 23.0);
                    traceTrafic(trace7, 17.0);

    });

/**
 * Cette fonction effectue un appel Ajax vers une url et retourne une promesse
 * @param {string} url 
 */

 
    </script>

{% endblock %}
